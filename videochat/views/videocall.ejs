<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>Document</title>
</head>
<body style="background-color:black;overflow:hidden;">
    <div class="row" id="grid">
        <div class="col-12 d-flex justify-content-center" id="guestGrid" style="height:50vh; width:100vw;">
            <video id="guest"></video>
        </div>
        <div class="col-12 d-flex justify-content-center" style="height:50vh; width:100vw;">
            <video id="host"></video>
        </div>
        <div style="position: fixed;
            bottom: 20px;
            z-index: 5;
            text-align: center;">

                <a id="muteButton" style="border-radius: 25%;
                font-size: 25px;
                padding: 3px 4px 3px 10px;
                background-color: #626567;width:60px;"> <i class="fas fa-microphone"></i> </a>

                <a id="stopVideo"  style="border-radius: 25%;
                font-size: 25px;
                padding: 5px 7px 5px 8px;
                margin-left: 4px;
                background-color: #626567;width:60px;">  <i class="fas fa-video"></i> </a>
        </div>
    </div>
</body>
<script>
    const muteButton = document.querySelector("#muteButton");
    const stopVideo = document.querySelector("#stopVideo");
    const hostVideo = document.getElementById('host')
    const guestVideo = document.getElementById('guest')

    let hostid = "<%= hostid %>", guestid = "<%= guestid %>", myVideoStream
    let peer = new Peer()

    const addVideoCamera = (res, id) => {
        navigator.mediaDevices
                        .getUserMedia({
                            audio: true,
                            video: true,
                        })
                        .then((stream) => {
                            hostVideo.muted = true
                            myVideoStream = stream;
                            hostVideo.srcObject = stream

                            hostVideo.addEventListener("loadedmetadata", () => {
                                hostVideo.play();
                            });

                            peer.call(id, stream)
                            //peer.call(id, stream)
                        });
    }

    const sendAjax = (id) => {
        let res = $.ajax({
            type: "POST",
            url: "http://localhost:3030/peers/list",
            dataType: 'json',
            data: {
                "hostPeer": id,
                "hostid": hostid,
                "guestid": guestid
            }
        });

        return res
    }
    
    window.addEventListener('beforeunload', function (e) {
            peer.destroy()
            e.preventDefault();
            e.returnValue = '';
    });


    var interval, res = null, pid = null , conn = null;
    var isRunning = 1;
    setInterval(()=>{
        if(conn){
            if(conn.peerConnection){
                if(conn.peerConnection.iceConnectionState){
                    if(conn.peerConnection.iceConnectionState == 'disconnected'){
                                                document.body.style.color = "white"
                        document.body.innerHTML = '<h1 style="position: absolute;top:50%;left:50%;transform: translate(-50%,-50%);text-align: center;">Host has been disconneted</h1>'
                    }
                }
            }
        }
      //  conn.peerConnection.iceConnectionState;
    },1000)
    peer.on("open", async(id)=>{
        pid = id
        res = sendAjax(id)

        interval = setInterval(()=>{
            if(isRunning == 1){
                let peerid = res.responseJSON.payload.hostpeer == id ? res.responseJSON.payload.guestpeer : res.responseJSON.payload.hostpeer
                if(peerid !== null){
                    addVideoCamera(res, peerid)
                    isRunning = 0;

                    conn = peer.connect(peerid, {
                        reliable: true
                    });

                    conn.on('close', function () {
                        $.ajax({
                            type: "POST",
                            url: "http://localhost:3030/peers/close",
                            dataType: 'json',
                            data: {
                                "hostid": hostid,
                                "guestid": guestid
                            }
                        });
                        //console.log("host has been disconnected")
                        alert("Host has been disconneted")
                        document.body.style.color = "white"
                        document.body.innerHTML = '<h1 style="position: absolute;top:50%;left:50%;transform: translate(-50%,-50%);text-align: center;">Host has been disconneted</h1>'
                        // setTimeout(()=>{
                        //     window.close()
                        // },1000)
                    });

                    clearInterval(interval)
                    
                }else{
                    res = sendAjax(id)
                }
             }
        },1000)
    })

    peer.on("call", (call) => {
            call.answer(myVideoStream);
            
            call.on("stream", (userVideoStream) => {
                guestVideo.srcObject = userVideoStream
                guestVideo.addEventListener("loadedmetadata", () => {
                    guestVideo.play();
                });
            });


    });

   
    stopVideo.addEventListener("click", () => {
        const enabled = myVideoStream.getVideoTracks()[0].enabled;
        if (enabled) {
            myVideoStream.getVideoTracks()[0].enabled = false;
            html = `<i style="color:red;"" class="fas fa-video"></i>`;
            stopVideo.innerHTML = html;
        } else {
            myVideoStream.getVideoTracks()[0].enabled = true;
            html = `<i style="color:#A6ACAF;" class="fas fa-video"></i>`;
            stopVideo.innerHTML = html;
        }
    });

    muteButton.addEventListener("click", () => {
        const enabled = myVideoStream.getAudioTracks()[0].enabled;
        if (enabled) {
            myVideoStream.getAudioTracks()[0].enabled = false;
            html = ` <i style="color:red;" class="fas fa-microphone"></i> `;
            muteButton.innerHTML = html;
        } else {
            myVideoStream.getAudioTracks()[0].enabled = true;
            html = ` <i style="color:#A6ACAF;" class="fas fa-microphone"></i> `;
            muteButton.innerHTML = html;
        }
    });
</script>
</html>